{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\quizzial\\\\src\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [allAnswers, setAllAnswers] = React.useState([]);\n  React.useEffect(() => {\n    setAllAnswers(() => {\n      const CorrectAndIncorrectAnswers = props.incorrectAnswers;\n      const index = Math.floor(Math.random() * CorrectAndIncorrectAnswers.length);\n      CorrectAndIncorrectAnswers.splice(index, 0, props.correctAnswer);\n      return CorrectAndIncorrectAnswers;\n    });\n  }, []);\n\n  function handleClick(answer) {\n    if (props.selectedAnswer === \"\") {\n      props.updateSelectedAnswer(props.id, answer);\n    } else if (props.selectedAnswer === answer) {\n      props.updateSelectedAnswer(props.id, \"\");\n    }\n  }\n\n  function getStyle(answer) {\n    if (props.questionSubmitted) {\n      if (answer === props.selectedAnswer) {\n        if (answer === props.correctAnswer) {\n          return {\n            backgroundColor: \"#94D7A2\",\n            color: \"#293264\"\n          };\n        } else {\n          return {\n            backgroundColor: \"#F8BCBC\",\n            color: \"#293264\"\n          };\n        }\n      } else {\n        if (answer === props.correctAnswer) {\n          return {\n            backgroundColor: \"#94D7A2\",\n            color: \"#293264\"\n          };\n        } else {\n          return {\n            color: \"#293264\",\n            opacity: \"0.5\",\n            border: \"0.794239px solid #4D5B9E\"\n          };\n        }\n      }\n    } else {\n      if (answer === props.selectedAnswer) {\n        return {\n          backgroundColor: \"#94D7A2\",\n          color: \"#293264\"\n        };\n      } else {\n        return {};\n      }\n    }\n  }\n\n  const answers = allAnswers.map(answer => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      value: answer,\n      className: \"answer\",\n      onClick: () => {\n        return handleClick(answer);\n      },\n      style: getStyle(answer),\n      children: answer\n    }, answer, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"tOo09c+c8RNfh2nFCwiITKxVQYU=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","allAnswers","setAllAnswers","useState","useEffect","CorrectAndIncorrectAnswers","incorrectAnswers","index","Math","floor","random","length","splice","correctAnswer","handleClick","answer","selectedAnswer","updateSelectedAnswer","id","getStyle","questionSubmitted","backgroundColor","color","opacity","border","answers","map","question"],"sources":["C:/Users/Hassan/Documents/Projects/quizzial/src/Question.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Question(props) {\n  const [allAnswers, setAllAnswers] = React.useState([]);\n\n  React.useEffect(() => {\n    setAllAnswers(() => {\n      const CorrectAndIncorrectAnswers = props.incorrectAnswers;\n      const index = Math.floor(\n        Math.random() * CorrectAndIncorrectAnswers.length\n      );\n      CorrectAndIncorrectAnswers.splice(index, 0, props.correctAnswer);\n      return CorrectAndIncorrectAnswers;\n    });\n  }, []);\n\n  function handleClick(answer) {\n    if (props.selectedAnswer === \"\") {\n      props.updateSelectedAnswer(props.id, answer);\n    } else if (props.selectedAnswer === answer) {\n      props.updateSelectedAnswer(props.id, \"\");\n    }\n  }\n\n  function getStyle(answer) {\n    if (props.questionSubmitted) {\n      if (answer === props.selectedAnswer) {\n        if (answer === props.correctAnswer) {\n          return {\n            backgroundColor: \"#94D7A2\",\n            color: \"#293264\",\n          };\n        } else {\n          return {\n            backgroundColor: \"#F8BCBC\",\n            color: \"#293264\",\n          };\n        }\n      } else {\n        if (answer === props.correctAnswer) {\n          return {\n            backgroundColor: \"#94D7A2\",\n            color: \"#293264\",\n          };\n        } else {\n          return {\n            color: \"#293264\",\n            opacity: \"0.5\",\n            border: \"0.794239px solid #4D5B9E\",\n          };\n        }\n      }\n    } else {\n      if (answer === props.selectedAnswer) {\n        return {\n          backgroundColor: \"#94D7A2\",\n          color: \"#293264\",\n        };\n      } else {\n        return {};\n      }\n    }\n  }\n\n  const answers = allAnswers.map((answer) => {\n    return (\n      <div\n        key={answer}\n        value={answer}\n        className=\"answer\"\n        onClick={() => {\n          return handleClick(answer);\n        }}\n        style={getStyle(answer)}\n      >\n        {answer}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"question-content\">\n      <div>{props.question}</div>\n      <div className=\"answers\">{answers}</div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAApC;EAEAL,KAAK,CAACM,SAAN,CAAgB,MAAM;IACpBF,aAAa,CAAC,MAAM;MAClB,MAAMG,0BAA0B,GAAGL,KAAK,CAACM,gBAAzC;MACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CACZD,IAAI,CAACE,MAAL,KAAgBL,0BAA0B,CAACM,MAD/B,CAAd;MAGAN,0BAA0B,CAACO,MAA3B,CAAkCL,KAAlC,EAAyC,CAAzC,EAA4CP,KAAK,CAACa,aAAlD;MACA,OAAOR,0BAAP;IACD,CAPY,CAAb;EAQD,CATD,EASG,EATH;;EAWA,SAASS,WAAT,CAAqBC,MAArB,EAA6B;IAC3B,IAAIf,KAAK,CAACgB,cAAN,KAAyB,EAA7B,EAAiC;MAC/BhB,KAAK,CAACiB,oBAAN,CAA2BjB,KAAK,CAACkB,EAAjC,EAAqCH,MAArC;IACD,CAFD,MAEO,IAAIf,KAAK,CAACgB,cAAN,KAAyBD,MAA7B,EAAqC;MAC1Cf,KAAK,CAACiB,oBAAN,CAA2BjB,KAAK,CAACkB,EAAjC,EAAqC,EAArC;IACD;EACF;;EAED,SAASC,QAAT,CAAkBJ,MAAlB,EAA0B;IACxB,IAAIf,KAAK,CAACoB,iBAAV,EAA6B;MAC3B,IAAIL,MAAM,KAAKf,KAAK,CAACgB,cAArB,EAAqC;QACnC,IAAID,MAAM,KAAKf,KAAK,CAACa,aAArB,EAAoC;UAClC,OAAO;YACLQ,eAAe,EAAE,SADZ;YAELC,KAAK,EAAE;UAFF,CAAP;QAID,CALD,MAKO;UACL,OAAO;YACLD,eAAe,EAAE,SADZ;YAELC,KAAK,EAAE;UAFF,CAAP;QAID;MACF,CAZD,MAYO;QACL,IAAIP,MAAM,KAAKf,KAAK,CAACa,aAArB,EAAoC;UAClC,OAAO;YACLQ,eAAe,EAAE,SADZ;YAELC,KAAK,EAAE;UAFF,CAAP;QAID,CALD,MAKO;UACL,OAAO;YACLA,KAAK,EAAE,SADF;YAELC,OAAO,EAAE,KAFJ;YAGLC,MAAM,EAAE;UAHH,CAAP;QAKD;MACF;IACF,CA3BD,MA2BO;MACL,IAAIT,MAAM,KAAKf,KAAK,CAACgB,cAArB,EAAqC;QACnC,OAAO;UACLK,eAAe,EAAE,SADZ;UAELC,KAAK,EAAE;QAFF,CAAP;MAID,CALD,MAKO;QACL,OAAO,EAAP;MACD;IACF;EACF;;EAED,MAAMG,OAAO,GAAGxB,UAAU,CAACyB,GAAX,CAAgBX,MAAD,IAAY;IACzC,oBACE;MAEE,KAAK,EAAEA,MAFT;MAGE,SAAS,EAAC,QAHZ;MAIE,OAAO,EAAE,MAAM;QACb,OAAOD,WAAW,CAACC,MAAD,CAAlB;MACD,CANH;MAOE,KAAK,EAAEI,QAAQ,CAACJ,MAAD,CAPjB;MAAA,UASGA;IATH,GACOA,MADP;MAAA;MAAA;MAAA;IAAA,QADF;EAaD,CAde,CAAhB;EAgBA,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAA,wBACE;MAAA,UAAMf,KAAK,CAAC2B;IAAZ;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,SAAf;MAAA,UAA0BF;IAA1B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GApFuB1B,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}